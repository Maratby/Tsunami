---{C:tsun_gold1}{C:tsun_gold2}{C:tsun_gold3}{C:tsun_gold4}{C:tsun_gold5}{C:tsun_gold4}{C:tsun_gold3}{C:tsun_gold2}

if Tsunami_Config.TsunamiLevel2 then
	---Gold Fusion Rarity
	SMODS.Rarity {
		key = "tsun_gold_fusion",
		default_weight = 0,
		badge_colour = HEX("d8b162"),
		pools = { ["Joker"] = false },
		get_weight = function(self, weight, object_type)
			return weight
		end,
	}

	SMODS.Joker {
		key = "gold_splish_splash",
		rarity = "tsun_gold_fusion",
		cost = 15,
		unlocked = true,
		discovered = true,
		blueprint_compat = true,
		eternal_compat = true,
		perishable_compat = true,
		---Cryptid config thingy to disable the Joker from being generated by Ace Equillibrium
		no_aeq = true,
		atlas = "Tsunami",
		pos = { x = 0, y = 17 },
		ability_name = "Gold Splish Splash",
		calculate = function(self, card, context)
			if context.setting_blind then
				local splishcard = create_card("Joker", G.jokers, nil, nil, nil, nil, "j_splash")
				splishcard:add_to_deck()
				splishcard:set_edition({ negative = true })
				G.jokers:emplace(splishcard)
			end
		end
	}

	FusionJokers.fusions:add_fusion("j_tsun_splish_splash", nil, false, "j_splash", nil, false,
		"j_tsun_gold_splish_splash", 15)

	SMODS.Joker {
		key = "gold_reflection",
		rarity = "tsun_gold_fusion",
		cost = 30,
		config = { extra = 1.3, clubs = 0, nonclubs = 0 , mult_from_clubs = 1},
		loc_vars = function(self, info_queue, card)
			return { vars = { card.ability.extra } }
		end,
		unlocked = true,
		discovered = true,
		blueprint_compat = true,
		eternal_compat = true,
		perishable_compat = true,
		no_aeq = true,
		atlas = "Tsunami",
		pos = { x = 1, y = 17 },
		ability_name = "Gold Reflection",
		calculate = function(self, card, context)
			if context.individual and context.cardarea == G.play and not context.blueprint then
				card.ability.mult_from_clubs = 1
				local scoredflag = false
				local increase = 1
				if card_is_splashed(context.other_card) then
					increase = 2
				end
				if not context.other_card.debuff then
					if context.other_card.ability.name == 'Wild Card' then
						card.ability.clubs = card.ability.clubs + increase
						card.ability.nonclubs = card.ability.nonclubs + increase
					elseif context.other_card:is_suit("Clubs") then
						card.ability.clubs = card.ability.clubs + increase
					else
						card.ability.nonclubs = card.ability.nonclubs + increase
					end
				end
				local clubinstances = math.min(card.ability.clubs, card.ability.nonclubs)
				if clubinstances ~= 0 then
					for k = 1, clubinstances, 1 do
						card.ability.mult_from_clubs = card.ability.mult_from_clubs * card.ability.extra
					end
				end
			end
			if context.joker_main then
				card.ability.clubs = 0
				card.ability.nonclubs = 0
				if card.ability.mult_from_clubs > 1 then
					return {
						message = localize { type = 'variable', key = 'a_xmult', vars = { card.ability.mult_from_clubs } },
						Xmult_mod = card.ability.mult_from_clubs,
						card = card,
					}
				end
			end
		end
	}
	FusionJokers.fusions:add_fusion("j_tsun_reflection", nil, false, "j_splash", nil, false, "j_tsun_gold_reflection", 20)


	--- This one's gonna be a fucking nightmare but it'll be so worth it.
	--- Mostly an addition for the high-scoring massively overpowered Balatro Enjoyers.
	GMinfolist = {
		"goldmarie_whitestake",
		"goldmarie_redstake",
		"goldmarie_greenstake",
		"goldmarie_blackstake",
		"goldmarie_bluestake",
		"goldmarie_purplestake",
		"goldmarie_orangestake",
		"goldmarie_goldstake"
	}

	---Used in a Lovely Patch to change the "Saved by Mr. Bones" text to say "Saved By Gold Marie" if this joker saved you instead
	GMSaved = false

	---Flag activates White Stake effect
	AeonDoubleSplash = false

	SMODS.Joker {
		key = "gold_tsunami_marie",
		rarity = "tsun_gold_fusion",
		cost = 50,
		unlocked = true,
		discovered = false,
		blueprint_compat = false,
		eternal_compat = true,
		perishable_compat = false,
		no_aeq = true,

		config = { extra = {
			--- Base effect Xmult
			base = 2,
			--- Key of Splash's Stake Sticker
			stickerkey = "none, you suck",
			sticker = 0,
			retriggers = 1,
			--- Prevents this card from reducing probabilities, unless it has already increased them..
			probcount = 1,
			tally = 0,
			basepurplexmult = 1.5,
			purplexmult = 1.5,
			goldtriggers = 2,
		} },
		atlas = "Tsunami",
		pos = { x = 2, y = 17 },
		soul_pos = { x = 4, y = 9 },
		ability_name = "Gold Marie",
		loc_vars = function(self, info_queue, card)
			for i = 1, 8 do
				info_queue[#info_queue + 1] = {
					key = GMinfolist[i],
					set = 'Other',
				}
			end
			return { vars = { card.ability.extra.base, card.ability.extra.stickerkey, card.ability.extra.sticker } }
		end,
		set_ability = function(self, card, initial, delay_sprites)
			card.ability.extra.sticker = sticker_inquisition(G.P_CENTERS.j_splash)
			card.ability.extra.stickerkey = get_joker_win_sticker(G.P_CENTERS.j_splash)
		end,
		add_to_deck = function(self, card, from_debuff)
			if card.ability.extra.sticker >= 1 then
				AeonDoubleSplash = true
			end
			if card.ability.extra.sticker >= 4 then
				card:set_edition({ negative = true })
				card:set_eternal(true)
			end
			if card.ability.extra.sticker >= 3 then
				for k, v in pairs(G.GAME.probabilities) do
					G.GAME.probabilities[k] = v * 2
				end
				card.ability.extra.probcount = card.ability.extra.probcount * 2
			end
		end,
		remove_from_deck = function(self, card, from_debuff)
			if card.ability.extra.sticker >= 1 then
				AeonDoubleSplash = false
			end
			if card.ability.extra.sticker >= 3 and card.ability.extra.probcount > 1 then
				for k, v in pairs(G.GAME.probabilities) do
					G.GAME.probabilities[k] = v / 2
				end
				card.ability.extra.probcount = card.ability.extra.probcount / 2
			end
			GMSaved = false
		end,
		calculate = function(self, card, context)
			if context.other_joker then
				if (context.other_joker.config.center.mod and context.other_joker.config.center.mod.id == "Tsunami" and self ~= context.other_joker)
					or ((context.other_joker.config.center.key == "j_splash" or context.other_joker.config.center.key == "j_evo_ripple")) then
					return {
						message = localize { type = 'variable', key = 'a_xmult', vars = { card.ability.extra.base } },
						Xmult_mod = card.ability.extra.base,
						card = context.other_joker,
					}
				end
			end
			if not context.blueprint then
				if context.setting_blind then
					GMSaved = false
				end
				if context.repetition and context.cardarea == G.play and card.ability.extra.sticker >= 2 then
					local triggerbonus = 0
					if card.ability.extra.sticker >= 8 then
						triggerbonus = card.ability.extra.goldtriggers
					end
					if context.other_card:get_id() == 8 or context.other_card:get_id() == 14 then
						return {
							message = localize('k_again_ex'),
							repetitions = card.ability.extra.retriggers + triggerbonus,
							card = card
						}
					elseif triggerbonus >= 1 then
						return {
							message = localize('k_again_ex'),
							repetitions = triggerbonus,
							card = card
						}
					end
				end
				if context.end_of_round and context.main_eval and not context.repetition and not context.individual and card.ability.extra.sticker >= 4 then
					for index, value in ipairs(G.jokers.cards) do
						if value.config.center.key == "j_splash" and not value.edition then
							value:set_edition({ negative = true })
						end
					end
				end
				if context.end_of_round and context.main_eval and card.ability.extra.sticker >= 7 then
					local card = SMODS.create_card({
						area = G.consumeables,
						key = "c_tsun_aeon"
					})
					card:set_edition("e_negative")
					card:add_to_deck()
					G.consumeables:emplace(card)
				end
				if context.individual and context.cardarea == G.play and card.ability.extra.sticker >= 6 then
					card.ability.extra.tally = 0
					card.ability.extra.purplexmult = card.ability.extra.basepurplexmult
					for index, value in ipairs(G.jokers.cards) do
						if value.config.center.key == "j_splash" or (value.config.center.mod and value.config.center.mod.id == "Tsunami") then
							card.ability.extra.tally = card.ability.extra.tally + 1
						end
					end
					card.ability.extra.purplexmult = card.ability.extra.basepurplexmult ^ card.ability.extra.tally
					if card.ability.extra.tally > 0 and (context.other_card:get_id() == 8 or context.other_card:get_id() == 14) then
						return {
							x_mult = card.ability.extra.purplexmult,
							card = context.other_card
						}
					end
				end
				if card.ability.extra.sticker >= 5 and context.game_over and not context.repetition and not context.individual and G.GAME.chips / G.GAME.blind.chips >= to_big(0.25) then
					local splashflag = false
					local killflag = true
					for index, value in ipairs(G.jokers.cards) do
						if value.config.center.key == "j_splash" or value.config.center.key == "j_evo_ripple" then
							splashflag = true
						else
							splashflag = false
						end
					end
					if splashflag == true then
						G.E_MANAGER:add_event(Event({
							func = function()
								G.hand_text_area.blind_chips:juice_up()
								G.hand_text_area.game_chips:juice_up()
								play_sound('tarot1')
								return true
							end
						}))
						for index, value in ipairs(G.jokers.cards) do
							if value.config.center.key == "j_splash" or value.config.center.key == "j_evo_ripple" then
								if value.ability.eternal then
									value.ability.eternal = false
								else
									if killflag == true then
										value:start_dissolve()
										killflag = false
									end
								end
							end
						end
						GMSaved = true
						return {
							message = localize('k_saved_ex'),
							saved = true,
							colour = G.C.RED
						}
					end
				end
			end
		end
	}

	FusionJokers.fusions:add_fusion("j_splash", nil, false, "j_tsun_tsunami_marie", nil, false,
		"j_tsun_gold_tsunami_marie", 50)

	--- this end is for the gold jokers config check DO NOT REMOVE IT!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
end