[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "for i=1, #G.play.cards do"
position = "after"
payload = """
        for k, v in ipairs(Splashkeytable) do
            if next(SMODS.find_card(v)) then
                scoring_hand[i] = G.play.cards[i]
                break
            end
        end
"""
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "table.insert(left_text, {n=G.UIT.O, config={w=1.2,h=1.2 , object = blind_sprite, hover = true, can_collide = false}})"
position = "after"
payload = """
        if GMSaved == true then
            table.insert(left_text,            
                        config.saved and 
                        {n=G.UIT.C, config={padding = 0.05, align = 'cm'}, nodes={
                            {n=G.UIT.R, config={align = 'cm'}, nodes={
                                {n=G.UIT.O, config={object = DynaText({string = {' '..localize('k_mariesave')..' '}, colours = {G.C.FILTER}, shadow = true, pop_in = 0, scale = 0.5*scale, silent = true})}}
                            }}
                        }}
                        or {n=G.UIT.C, config={padding = 0.05, align = 'cm'}, nodes={
                            {n=G.UIT.R, config={align = 'cm'}, nodes={
                                {n=G.UIT.O, config={object = DynaText({string = {' '..localize('ph_score_at_least')..' '}, colours = {G.C.UI.TEXT_LIGHT}, shadow = true, pop_in = 0, scale = 0.4*scale, silent = true})}}
                            }},
                            {n=G.UIT.R, config={align = 'cm', minh = 0.8}, nodes={
                                {n=G.UIT.O, config={w=0.5,h=0.5 , object = stake_sprite, hover = true, can_collide = false}},
                                {n=G.UIT.T, config={text = G.GAME.blind.chip_text, scale = scale_number(G.GAME.blind.chips, scale, 100000), colour = G.C.RED, shadow = true}}
                            }}
                        }}) 
        else
"""
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "elseif string.find(config.name, 'tag') then"
position = "before"
payload = """
            end
"""
match_indent = true
